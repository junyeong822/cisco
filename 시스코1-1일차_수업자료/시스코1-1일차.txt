이름 : 김유택
이메일 : sunnykid7@gmail.com
전화번호 : 010-8923-7026

수업자료 :  탐색기  ftp://192.168.3.101

점심시간 : 12시 50분 ~ 2시
출석 : 2교시 시작전 

>> 프로그램 다운로드
- 패킷트레이서  : 네트워크 시뮬레이터
https://www.netacad.com
sunnykid7@gmail.com  / P@ssw0rd 

- 와이어샤크 : 패킷 분석 프로그램
https://www.wireshark.org

===========================================
1. OSI 7계층 모델 : 네트워크로 데이터를 보내기 위해 계층을 나누고 해당 계층에서
                          필요한 정보를 추가하기 위해 만든 모델

                          > 계층화의 이점 :  장애처리 용이
                                                   프로그램이나 장비 개발시 효율적
   OSI(Open Systems Interconnection)
   ISO(Internet Standard Organization)에서 계층을 구성하고 프로토콜을 개발하려했으나
   웹의 급속한 발전으로 기존에 사용하던 TCP/IP 프로토콜을 기반으로 프로토콜 개발이
    이루어짐.(TCP/IP 프로토콜 스택)                                             

                               전송 데이터를 목적지로 보내기 위해서 계층정보를 추가함.
       전송할데이터          계층정보(헤더)          
   7  애플리케이션            L7H               HTTP, FTP
   6  프리젠테이션            L6H               PDF,HTML,ZIP,MP4           상위계층
   5  세션                        L5H               연결                              원본데이터 유지
-------------------------------------------------------------------------
   4  트랜스포트               L4H               Segmentation, 포트정보
   3  네트워크(인터넷)        L3H              IP주소
   2  데이터링크                L2H              MAC주소, WAN과 LAN(유선,무선)에 따라 다른 정보
   1  피지컬                     bit stream(유선,무선)  


==============================================================
2. TCP/IP 프로토콜 스택(스위트) : 원격의 시스템과 통신에 필요한 프로토콜들을 모아서 계층별로 쌓아 놓은 것

                                  전송할 데이터
   5계층  애플리케이션  : HTTP,FTP, HTTPS, DNS, SMTP, TELNET, SSH 등 클라이언트/서버 프로그램에 사용되는 프로토콜 정의
                                    80    21   443     53   
                                      포트번호 : 서비스를 구분하는 번호
   4계층  전송(트랜스포트) : TCP(연결, 신뢰),  UDP(비연결, 비신뢰)                                   => Segment

                                     ICMP, IGMP, OSPF, EIGRP...
   3계층  네트워크(인터넷) : IPv4,  IPv6 => 논리적인 주소(사용자가 임의대로 바꿀 수 있음.)  => Packet
                                            ARP, RARP, STP
   2계층  네트워크 인터페이스 :  EthernetII, 802.3,  802.11a|b|g|n|ac,    HDLC,  PPP               => Frame
                                           ------------------  ------------------     -------------
                                                   유선랜       무선랜                    WAN

=====================================================================
3. 계층별 주소
   
   7계층 : URI = URL + URN

            https://www.wireshark.org/tools/oui-lookup.html

   4계층 : 포트번호(각각의 애플리케이션 프로토콜은 사용하는 기본 포트가 정해져 있음.  변경 가능)
             HTTP(TCP 80), DNS(UDP 53), TELNET(TCP 23), SMTP(TCP 25), FTP(TCP 21), HTTPS(TCP 443)...
             1~1023 : Wellknown port (관리자가 실행하는 서비스에서 사용)
             1024~65535 : Random port(출발지 포트로 사용됨.)

    3계층 : IP주소
    
    2계층 : MAC주소 => LAN에서만 사용됨.
 
4. 계층별 장비

   7계층 : 애플리케이션 스위치(데이터의 종류에 따라 부하분산)=> 보안장비
   4계층 : 로드밸런서(부하분산)  => 포트번호를 이용해서 서버로 가는 트래픽을 분산시킴.
   3계층 : 라우터, 멀티레이어 스위치 => IP주소를 이용해서 패킷을 라우팅 함.
   2계층 : 브리지, 스위치 => MAC주소를 이용해서 프레임을 스위칭 함.
   1계층 : 케이블, 커넥터, 리피터, 허브, 주파수

=================================================================

5. LAN 내부(같은 네트워크)에서의 통신 방식

   -  ARP 캐시를 확인한다. 
      1) ARP 캐시에 목적지 IP주소에 해당하는 MAC주소가 있으면 프레임의 목적지에 MAC주소를 넣고 전송한다.
      2) ARP 캐시에 목적지 IP주소에 해당하는 MAC주소가 없으면 프레임의 목적지에 브로드캐스트주소를 넣고 
         ARP요청을 전송한다.
         목적지 시스템으로부터 ARP응답을 수신하면 목적지의 MAC주소를 ARP 캐시에 저장한 후 프레임의 
         목적지에 MAC주소를 넣고 전송한다.

  
6. LAN 외부(다른 네트워크)에 있는 시스템과의 통신 방식

  - Default Gateway가 설정돼 있는지 확인한다.
    1) 없으면 전송불가
    2) 있으면 다음 과정 진행
       - ARP 캐시를 확인하고 Default Gateway주소에 해당하는 MAC주소가 있으면 프레임의 목적지 주소에 
         Gateway주소에 해당하는 MAC주소를 넣고 전송한다.
       - ARP 캐시를 확인하고 Default Gateway주소에 해당하는 MAC주소가 없으면 Gateway주소를 목적지로하는
         ARP 요청을 전송한다.   
         ARP응답이 수신되면 ARP캐시에 저장하고 프레임의 목적지주소에 Gateway 주소에 해당하는 MAC주소를 
         넣고 전송한다.

7.  데이터 전송 방식

    유니캐스트 :  1 대 1 통신방식
    브로드캐스트 :  1 대 ALL(LAN안의 모든 호스트)  
                         ARP가 사용하는 전송방식. IP주소에 해당하는 MAC주소를 알아오기 위해 LAN안의 모든 호스트로
                         데이터를 전송함.
                         2계층주소(MAC주소)  -   FFFF.FFFF.FFFF
                         3계층주소(IP주소)  -  255.255.255.255 ,   192.168.1.255(네트워크 브로드캐스트, 마지막주소)

    멀티캐스트 : 1 대 N(수신하도록 설정된 호스트) => 동적 라우팅 프로토콜이 사용하는 전송방식
                                                                         >OSPF 트래픽은 OSPF가 설정된 장치만 수신하고 나머지는 폐기
                                                                        IPTV가 사용하는 전송방식
                                                                         > IPTV 특정 채널에 해당하는 영상만 전송.
                                                                         > 영상이 저장된 서버와 1대1 통신이 아니라 목적지까지 1개의 
                                                                            패킷으로 전송되고 해당 목적지에서 요청에 따라 복사됨.
                                                                  

==============================================================================
>> IPv4 Addressing 

- IPv4  

  32비트로 구성된 주소
  2^32 = 약 42억개
  IP주소는 기본적으로 중복이 허용되지 않음.
  8비트씩 묶어서 십진수로 표현하고 (.)으로 구분 : 192.168.1.1
   예)
    1111 1111 => 255
    1000 0000 => 128 
  32비트를 네트워크비트와 호스트비트로 구분함. => 구분하기위해서 Netmask가 사용됨(연속된 1로 표시)

  IP주소     10000000 . 10000000 . 10000000 . 10000000          128.128.128.128
  Netmask  11111111   11111111   00000000  00000000          255.255.0.0
 ---------------------------------------------------------------
  Network   10000000 . 10000000 . 00000000 . 00000000         128.128.0.0

  IPv4주소는 클래스로 기본 네트워크를 구분해 놓음(첫 8개비트로 구분해놓음.)

  A클래스 :  1 ~ 126       디폴트 넷마스트 255.0.0.0    (0, 127은 예약된 주소)
  B클래스 :  128 ~ 191    디폴트 넷마스트 255.255.0.0
  C클래스 :  192 ~ 223    디폴트 넷마스트 255.255.255.0 

  예)
   150.100.5.100  => 255.255.0.0
   218.25.34.29   => 255.255.255.0
   50.100.15.9     => 255.0.0.0 

   - A주소와  B주소 스위치만으로 통신하기 위해서는 같은 네트워크에 속해야 함.

   192.168.2.100  192.168.3.200  => 디폴트 넷마스크를 사용하면 두 주소는 다른 네트워크에 속함.
                                                  255.255.0.0  넷마스크를 사용하면 두 주소는 같은 네트워크에 속함.

   - 호스트비트가 모두 0인 주소를 네트워크주소라고 하고,  모두 1인 주소를 브로드캐스트 주소라고 함. 
     네트워크주소와 브로드캐스트주소는 호스트에 할당할 수 없음.
     C클래스 네트워크에서 호스트에 할당할 수 있는 주소 :  2^8 - 2 = 254
     B클래스 네트워크에서 호스트에 할당할 수 있는 주소 :  2^16 - 2 = 65534


   -  A클래스는 약 16,000,000개의 호스트가 하나의 네트워크로 구성됨.
      B클래스는 65534개의 호스트가 하나의 네트워크로 구성됨.

      => 많은 수의 주소를 사용하는 네트워크는 흔치 않음. 특히 A클래스 네트워크를 사용해야하는 경우는 거의 없음.
           따라서 공인IP주소가 부족한 것을 해결하기 위해 서브네팅(Subnetting)을 이용하여 네트워크를 작게 나누어 할당함.


- 공인IPv4주소 : 인터넷 상에서 시스템을 식별할 수 있는 유일한 주소
          
- 사설IPv4주소 : 중복할당이 가능한 주소. 인터넷상에서 해당 주소로 직접 접근 불가
                      인터넷이 필요없는 단말에 부여해서 공인주소를 절약할 수 있음.
                      IPv4주소는 2^32으로 약 42억개 주소로 네트워크상에 단말이 늘어나면서 부족현상이 발생함.
                      클래스별로 사설주소 대역을 지정하고 누구나 사용이 가능함.
                      사설IP주소가 부여된 시스템에서 인터넷이 필요한 경우 NAT장비에 연결을 하면 인터넷이 가능함.
                      NAT장비는 사설IP주소를 공인IP주소로 바꿔주는 역할을 함.

                      A클래스 : 10.X.X.X
                      B클래스 : 172.16.X.X ~ 172.31.X.X
                      C클래스 : 192.168.X.X
                      APIPA :  169.254.X.X   => DHCP에 의한 자동할당받기 실패시 부여되는 사설주소


--------------------------------------------------------------------------------------------------------------------------

- 서브네팅(Subnetting) : 클래스 네트워크가 주어진 네트워크를 더 작은 서브넷으로 나누는 것.
                                 실제 사용할 IP주소보다 더 큰 네트워크가 할당되면 사용하지 않고 낭비되는
                                  주소가 많이 비효율적임. 따라서 네트워크를 나누어서 필요한 크기만큼의 서브넷으로
                                  사용하는 방법.


- 서브네팅하는 방법 : 넷마스크의 비트를 늘려가면서 2의 승수로 나눔. 
                             즉, 1개 비트가 늘어날때마다 2^n으로 네트워크는 나뉘어짐.

   ex)    172.16.0.0/16을 C클래스 네트워크로 서브네팅하기


   ex)
           172.16.0.0/16 네트워크를 256개로 서브네팅하기
                          255.255.0.0
 IP주소           1010 1100 .  0001 0000  .  0000 0000  .  0000 0000

 Netmask        1111 1111 .  1111 1111  .  1111 1111 .  0000 0000     /24

                      172.16.0.0/24
                      172.16.1.0/24
                                2
                                3
                                |
                              255 
 

  ex)    172.31.0.0/16 네트워크를 32개 서브넷으로 서브네팅 하기

   
                  0000 0000 
                  1111 1000            255.255.240.0

                  0000 0 000          172.31.0.0/21
                  0000 1 000          172.31.8.0/21
                  0001 0 000          172.31.16.0/21
                      |                               24 
                  1111 1 000                    32 
                                                      |
                                                     248


   ex)
           192.168.0.0/24 네트워크를 4개로 서브네팅하기

                                                         00  000000   192.168.0.0/26
                                                              111111    192.168.0.63
                                                         01  000000    192.168.0.64/26
                                                              111111    192.168.0.127
                                                         10   000000   192.168.0.128/26
                                                               111111   192.168.0.191 
                                                         11   000000   192.168.0.192/26
                                                               111111   192.168.0.255
 
          11111111 . 11111111 . 11111111 . 11 000000    /26


     ex)   191.56.100.50/16
            191.56.0.0
            191.56.255.255 

            191.56.100.50/22

                    0110 0100 
                    1111 1100 
                   --------------
                    0110 0100
                        100.0/22
                        103.255
     
     ex)   172.32.2.10/22 
                     0000 0010
                     1111 1100
                    -------------
                     0000 0000
                           0.0/22
                           3.255
       

  
 >> 서브네팅을 해서 더 작은 서브넷으로 사용해야하는 이유는 필요한 IP주소 개수에 맞게 서브네팅을 하면
      IP주소를 효율적으로 사용할 수 있음.(공인IP주소일 경우)
      그리고 네트워크 크기가 작으면 즉 사용할 수 있는 IP주소 개수가 적으면 브로드캐스트의 양을 줄일 수 있음.


 >> 서브네팅이 가능한 서브넷마스크의 최대 크기는 /31 임.    /32는 IP주소 자체를 나타냄.

      172.16.1.0/31   =>  172.16.1.0   172.16.1.1  : WAN구간에만 주의해서 사용해야함.
  
      일반적인 서브네팅 최대 크기는 /30 임.
      172.16.1.0/30   =>   172.16.1.0 : 네트워크주소
                                  172.16.1.1 ,172.16.1.2 : 사용 가능한 주소
                                  172.16.1.3 : 브로드캐스트주소 
 
      172.16.1.160/30 =>  172.16.1.160 : 네트워크주소
                                   172.16.1.161, 172.16.1.162 : 사용 가능한 주소
                                   172.16.1.163 : 브로드캐스트주소

     1        1     1     0      0    0       0     0

   2^7  2^6  2^5  2^4  2^3  2^2  2^1  2^0

    128   64    32    16    8      4      2      1


                  첫번째주소범위   디폴트넷마스크     사용가능한 IP주소 개수
A클래스  :  1 ~ 126  ,            255.0.0.0                 2^24 - 2 = 약 15백만개

B클래스  :   128 ~ 191,          255.255.0.0              2^16 - 2  = 65534

C클래스  :  192 ~ 223,           255.255.255.0          2^8 - 2  =  254


 1.0.0.0/8 ,   172.12.0.0/16,      200.1.1.0/24

  /30 
  11111111 1111111 11111111 11111100 
      255         255        255         252


   2.2.2.1/30
 
          0000 0001
          1111 1100
          -----------
          0000 0000
                2.2.2.0/30
                2.2.2.3
   2.2.2.5/30 
          0000 0101
          1111 1100  
          -----------
          0000 0100
                2.2.2.4/30
                2.2.2.7
 
-------------------------------------------------------------------------------------------------------------------------------------------
9/29일 :  VLSM,  CIDR  => Switching














